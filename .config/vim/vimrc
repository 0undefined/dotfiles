runtime! archlinux.vim
scriptencoding utf-8

set directory=$XDG_CACHE_HOME/vim,~/,/tmp
set backupdir=$XDG_CACHE_HOME/vim,~/,/tmp
set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
let $MYVIMRC="$XDG_CONFIG_HOME/vim/vimrc"
set runtimepath=$XDG_CONFIG_HOME/vim,$XDG_CONFIG_HOME/vim/after,$VIM,$VIMRUNTIME,$VIM/vimfiles,$VIM/vimfiles/after

" behaviour
set history=200
set wildmenu
set ruler
set cursorline
set showmatch
set hlsearch
set nocompatible
set backspace=2
set incsearch
set formatoptions+=tcroqn2bmj
set number
set nowrap

" Enable mouse support
set mouse=a

set clipboard=unnamedplus

" tabs
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2
set smartindent
set textwidth=80

" netrw settings
let g:netrw_banner=0
let g:netrw_browse_split=1
let g:netrw_altv=4

" theme
syntax enable

" thematics
set background=dark
set colorcolumn=81

" Colorscheme overrides, for transparency
let g:jellybeans_overrides = { 'background': {
\ 'guibg':      'none',
\ 'ctermbg':    'none',
\ '256ctermbg': 'none',
\}}
let g:jellybeans_use_term_italics = 1

colorscheme jellybeans
"set listchars=space:·\,eol:¬
set listchars=tab:\ \ >,extends:…,precedes:…
set list
set tags+=./tags;/


" adding pathogen
execute pathogen#infect('bundle/{}')
filetype plugin indent on

" encodings
set fileencoding=utf-8
set encoding=utf-8
set fileformats=unix

set grepprg=grep\ -nH\ $*

"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list            = 1
let g:syntastic_check_on_open            = 1
let g:syntastic_check_on_wq              = 0

" filetypes
let g:syntastic_disabled_filetypes=['asm', 's', 'latex', 'tex']

let g:tex_flavor='latex'
let g:vimtex_view_method='zathura'
let g:vimtex_quickfix_mode=0
set conceallevel=2
let g:tex_conceal='abdmg'
let g:vimtex_compiler_method = 'latexrun'
let g:vimtex_compiler_latexrun = {
            \ 'backend' : 'jobs',
            \ 'background' : 1,
            \ 'build_dir' : 'latex.out',
            \ 'options' : [
            \   '-verbose-cmds',
            \   '--latex-args="-synctex=1"',
            \ ],
            \}

let g:latex_view_general_viewer = 'zathura'
let g:vimtex_view_method = 'zathura'

function! Synctex()
  " remove 'silent' for debugging
  execute "silent !mv -u latex.out/" . expand('%:t:r') . ".synctex.gz ."
  execute "silent !zathura --synctex-forward " . line('.') . ":" . col('.') . ":" . bufname('%') . " " . expand('%:t:r') . ".pdf"
  redraw!
endfunction

au BufNewFile,BufRead /tmp/[a-zA-Z0-9]\+/ setlocal ft=sh

" Remove trailing cancer on write
autocmd BufWritePre * %s/\s\+$//e
autocmd BufWritePost *.tex !latexrun --bibtex-cmd="biber" --latex-args="-synctex=1 -interaction=nonstopmode" %

autocmd BufReadPre *.asm !set ft=nasm

set makeprg=GCC_COLORS=\ make

vnoremap // y/\V<C-R>"<CR>
vnoremap (( <ESC>`>a)<ESC>`<i(<ESC>

match ErrorMsg '\%>80v.\+'
match ErrorMsg '\( \|	\)\+$'

map <F5> :make<CR>

map! <ESC>[1;5A <C-Up>
map! <ESC>[1;5B <C-Down>
map! <ESC>[1;5C <C-Right>
map! <ESC>[1;5D <C-Left>
map  <ESC>[1;5A <C-Up>
map  <ESC>[1;5B <C-Down>
map  <ESC>[1;5C <C-Right>
map  <ESC>[1;5D <C-Left>

map <ScrollWheelUp> <C-Y>
"map <ScrollWheelDown> <C-E>

imap <C-E> <ESC>A
imap <C-A> <ESC>I

" Preserve clipboard
autocmd VimLeave * call system("xsel -ib", getreg())
autocmd VimSuspend * call system("xsel -ib", getreg())
